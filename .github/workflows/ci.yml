name: Frontend Docker Image CI
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: Test-Prep-AI/Frontend  
  VERSION: 1.2.6

jobs:
  build:
    if: github.repository_owner == 'Test-Prep-AI' && github.ref == 'refs/heads/main'
    name: Build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint
        continue-on-error: true

      - name: Run tests
        run: npm test
        continue-on-error: true

  package:
    name: Package and Publish
    if: github.repository_owner == 'Test-Prep-AI' && github.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set lowercase image name
        run: echo "LOWERCASE_IMAGE_NAME=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Log into container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish container image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}:${{ env.VERSION }}
          cache-from: type=gha